apiVersion: v1
kind: Template
metadata:
  name: openjdk-runtime-app-example
  annotations:
    description: >-
      OpenJDK ${OPENJDK_VERSION} runtime application templated example
message: "OpenJDK runtime application example created as: ${APP_NAME}"
objects:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: ${APP_NAME}
    labels:
      app: ${APP_NAME}
  spec:
    lookupPolicy:
      local: false
    tags:
    - name: latest
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: ${S2I_APP}
    labels:
      app: ${APP_NAME}
  spec:
    lookupPolicy:
      local: false
    tags:
    - name: latest
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: ubi8
  spec:
    lookupPolicy:
      local: false
    tags:
    - from:
        kind: DockerImage
        name: registry.access.redhat.com/ubi8
      name: latest
      referencePolicy:
        type: Source
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: openjdk-${OPENJDK_VERSION}
  spec:
    lookupPolicy:
      local: false
    tags:
    - from:
        kind: DockerImage
        name: registry.access.redhat.com/ubi8/openjdk-${OPENJDK_VERSION}
      name: latest
      referencePolicy:
        type: Source
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${S2I_APP}
  spec:
    failedBuildsHistoryLimit: 5
    output:
      to:
        kind: ImageStreamTag
        name: ${S2I_APP}:latest
    runPolicy: Serial
    source:
      contextDir: getting-started
      git:
        uri: https://github.com/quarkusio/quarkus-quickstarts
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: openjdk-${OPENJDK_VERSION}:latest
    successfulBuildsHistoryLimit: 5
    triggers:
    - type: ConfigChange
    - imageChange:
      from:
        kind: ImageStreamTag
        name: openjdk-${OPENJDK_VERSION}:latest
      type: ImageChange
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: ${APP_NAME}
    labels:
      app: ${APP_NAME}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APP_NAME}
          deploymentconfig: ${APP_NAME}
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/${NAMESPACE}/${APP_NAME}:latest
          imagePullPolicy: IfNotPresent
          name: ${APP_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APP_NAME}
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
          namespace: ${NAMESPACE}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    failedBuildsHistoryLimit: 5
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}:latest
    runPolicy: Serial
    source:
      dockerfile: |
        ## Stage 2 : create the docker final image only including the runnable jar
        FROM registry.access.redhat.com/ubi8
        RUN dnf install -y ${OPENJDK_PKG_NAME} && dnf -y clean all
        RUN mkdir /work
        WORKDIR /work/
        COPY getting-started-1.0-SNAPSHOT-runner.jar /work/application.jar

        # set up permissions for user `1001`
        RUN chmod 775 /work \
          && chown -R 1001 /work \
          && chmod -R "g+rwX" /work \
          && chown -R 1001:root /work

        EXPOSE 8080
        USER 1001
        ENV DEFAULT_JAVA_OPTS="-XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90"

        CMD java $DEFAULT_JAVA_OPTS -jar /work/application.jar
      ## Stage 1: Map /deployments folder into the build image
      ##          so as to be able to assemble the runtime image, based on ubi8
      images:
        - from:
            kind: ImageStreamTag
            name: ${S2I_APP}:latest
          paths:
          - sourcePath: /deployments/getting-started-1.0-SNAPSHOT-runner.jar
            destinationDir: "."
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: ubi8:latest
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers:
    - type: ConfigChange
    - imageChange:
      from:
        kind: ImageStreamTag
        name: ${S2I_APP}:latest
      type: ImageChange
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: ${APP_NAME}
      weight: 100
    wildcardPolicy: None
parameters:
- description: "Runtime Application Name"
  name: APP_NAME
  required: true
- description: "The project name (namespace)"
  name: NAMESPACE
  required: true
- description: "s2i Application Name"
  name: S2I_APP
  required: true
- description: "OpenJDK package name"
  name: OPENJDK_PKG_NAME
  value: java-11-openjdk
- description: "Java version. If this is specified, OPENJDK_PKG_NAME must be specified too."
  name: OPENJDK_VERSION
  value: "11"
